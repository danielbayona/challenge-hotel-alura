package dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import factory.ConnectionFactory;
import model.Reserva;

public class ReservaDAO {
	
	public static int guardarReserva(Reserva reserva) {
		try(Connection con = new ConnectionFactory().setConnection()){
			String sql = "INSERT INTO reservas (fecha_entrada,fecha_salida,valor,forma_pago) VALUES (?,?,?,?)"; 
			PreparedStatement ps = con.prepareStatement(sql,Statement.RETURN_GENERATED_KEYS);
			ps.setString(1, reserva.getFechaEntrada().toString());
			ps.setString(2, reserva.getFechaSalida().toString());
			ps.setDouble(3, reserva.getValorReserva());
			ps.setString(4, reserva.getFormaPago());
			
			ps.execute();
			ResultSet resultSet = ps.getGeneratedKeys();
			resultSet.next();
			reserva.setId(resultSet.getInt(1));
			//System.out.println("Id Reserva:"+ resultSet.getInt(1));
			//System.out.println("actualizados: "+ ps.getUpdateCount());
			return reserva.getId();
			
		}catch(SQLException e) {
			throw new RuntimeException(e);
			
		}
	}
	
	public static List<Reserva> buscarReserva(int id) {
		try(Connection con =new ConnectionFactory().setConnection()){
			String sql;
			if(id==0) {
				sql = "SELECT id,fecha_entrada,fecha_salida,valor,forma_pago FROM reservas";
			}else {
				sql = "SELECT id,fecha_entrada,fecha_salida,valor,forma_pago FROM reservas WHERE id = ?";				
			}
			
			PreparedStatement ps= con.prepareStatement(sql);
			if(id!=0) {
				ps.setInt(1, id);				
			}
			
			ps.execute();
			ArrayList<Reserva> resultado = new ArrayList<>();
			ResultSet rs = ps.getResultSet();
			while(rs.next()) {
				Reserva InfoReserva = new Reserva(rs.getInt(1),rs.getDate(2),rs.getDate(3),rs.getString(5));
				resultado.add(InfoReserva);
			}
			return resultado;
			
		}catch(SQLException e) {
			return null;
			//throw new RuntimeException(e);
		}
		
	}
	
	public static void modificarReserva(int id,Date fechaEntrada, Date fechaSalida, String formaPago) {
		try(Connection con = new ConnectionFactory().setConnection()){
			String sql="UPDATE reservas SET fecha_entrada=?,fecha_salida=?,valor=?,forma_pago=? WHERE id=?";
			PreparedStatement ps = con.prepareStatement(sql);
			ps.setDate(1, fechaEntrada);
			ps.setDate(2, fechaSalida);
			ps.setDouble(3, Reserva.calcularValorReserva(fechaEntrada, fechaSalida));
			ps.setString(4,formaPago);
			ps.setInt(5,id);
			
			ps.execute();
			
			
		}catch(SQLException e) {
			throw new RuntimeException(e);
		}
	}
	void eliminarReserva(int id) {
		try(Connection con = new ConnectionFactory().setConnection()){
			String sql="DELETE reservas WHERE id=?";
			PreparedStatement ps = con.prepareStatement(sql);
			ps.setInt(1,id);
			ps.execute();
			
		}catch(SQLException e) {
			throw new RuntimeException(e);
		}
	}

	public static void eliminar(int idReserva) {
		try(Connection con = new ConnectionFactory().setConnection()){
			String sql = "DELETE reserva WHERE id=?";
			PreparedStatement ps = con.prepareStatement(sql);
			ps.setInt(1, idReserva);
			ps.execute();
		}catch(SQLException e) {
			throw new RuntimeException(e);
		}
		
	}
	
	
	
	
	

}
